{"ast":null,"code":"import SHOP_ACTION_TYPES from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: SHOP_ACTION_TYPES.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap = {\n  type: SHOP_ACTION_TYPES.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n};\nexport const fetchCollectionsError = errorMessage => ({\n  type: SHOP_ACTION_TYPES.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      console.log(collectionsMap);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsError(error.message)));\n  };\n};","map":{"version":3,"sources":["/Users/samp/projects/jobSearch/udemy/complete-react/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["SHOP_ACTION_TYPES","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsError","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","console","log","catch","error","message"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,cAA9B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEJ,iBAAiB,CAACK;AADgB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,GAAI;AACrDH,EAAAA,IAAI,EAAEJ,iBAAiB,CAACQ,yBAD6B;AAErDC,EAAAA,OAAO,EAAEF;AAF4C,CAAlD;AAKP,OAAO,MAAMG,qBAAqB,GAAGC,YAAY,KAAK;AAClDP,EAAAA,IAAI,EAAEJ,iBAAiB,CAACY,yBAD0B;AAElDH,EAAAA,OAAO,EAAEE;AAFyC,CAAL,CAA1C;AAMP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,YAAMZ,cAAc,GAAGL,+BAA+B,CAACiB,QAAD,CAAtD;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYd,cAAZ;AACAO,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACH,KAJD,EAIGe,KAJH,CAISC,KAAK,IAAIT,QAAQ,CAACJ,qBAAqB,CAACa,KAAK,CAACC,OAAP,CAAtB,CAJ1B;AAKH,GATD;AAUH,CAXM","sourcesContent":["import SHOP_ACTION_TYPES from './shop.types';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nexport const fetchCollectionsStart = () => ({\n    type: SHOP_ACTION_TYPES.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsSuccess = collectionsMap = ({\n    type: SHOP_ACTION_TYPES.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n})\n\nexport const fetchCollectionsError = errorMessage => ({\n    type: SHOP_ACTION_TYPES.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n})\n\n\nexport const fetchCollectionsStartAsync = () => {\n    return dispatch => {\n        const collectionRef = firestore.collection('collections');\n        dispatch(fetchCollectionsStart());\n\n        collectionRef.get().then(snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            console.log(collectionsMap);\n            dispatch(fetchCollectionsSuccess(collectionsMap));\n        }).catch(error => dispatch(fetchCollectionsError(error.message)));\n    }\n};\n"]},"metadata":{},"sourceType":"module"}