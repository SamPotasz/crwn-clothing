{"ast":null,"code":"var _jsxFileName = \"/Users/samp/projects/jobSearch/udemy/complete-react/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport './cart-dropdown.styles.scss';\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport { selectCartItems } from '../../redux/cart/cart.selectors'; //connect gives access to dispatch property. \n// can use it for 1-off dispatches w/out writing mapDispatchToProps\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"cart-items\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }\n}, cartItems.length ? cartItems.map(item => /*#__PURE__*/React.createElement(CartItem, {\n  key: item.id,\n  item: item,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 17\n  }\n})) : /*#__PURE__*/React.createElement(\"span\", {\n  className: \"empty-message\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 15\n  }\n}, \"Your cart is empty\")), /*#__PURE__*/React.createElement(CustomButton, {\n  onClick: () => {\n    dispatch(toggleCartHidden());\n    history.push('/checkout');\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }\n}, \"CHECKOUT\"));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n}); //wrap in withWrouter so we have access to history in props\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["/Users/samp/projects/jobSearch/udemy/complete-react/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","createStructuredSelector","withRouter","CustomButton","CartItem","toggleCartHidden","selectCartItems","CartDropdown","cartItems","history","dispatch","length","map","item","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAO,6BAAP;AAEA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,eAAT,QAAgC,iCAAhC,C,CAEA;AACA;;AACA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA;AAArB,CAAD,kBACjB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEIF,SAAS,CAACG,MAAV,GACAH,SAAS,CAACI,GAAV,CAAeC,IAAI,iBACf,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,EAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADA,gBAIE;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANN,CADJ,eAUI,oBAAC,YAAD;AAAc,EAAA,OAAO,EAAE,MAAM;AACzBH,IAAAA,QAAQ,CAACL,gBAAgB,EAAjB,CAAR;AACAI,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACH,GAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,CADJ;;AAoBA,MAAMC,eAAe,GAAGf,wBAAwB,CAAC;AAC7CO,EAAAA,SAAS,EAAEF;AADkC,CAAD,CAAhD,C,CAIA;;AACA,eAAeJ,UAAU,CAACF,OAAO,CAACgB,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\n\nimport './cart-dropdown.styles.scss';\n\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\n\n//connect gives access to dispatch property. \n// can use it for 1-off dispatches w/out writing mapDispatchToProps\nconst CartDropdown = ({cartItems, history, dispatch}) => (\n    <div className='cart-dropdown'>\n        <div className='cart-items' >\n        { \n            cartItems.length ?\n            cartItems.map( item => (\n                <CartItem key={item.id} item={item} />\n            ))\n            : <span className='empty-message'>Your cart is empty</span>\n        }\n        </div>\n        <CustomButton onClick={() => {\n            dispatch(toggleCartHidden());\n            history.push('/checkout');\n        }}>\n            CHECKOUT\n        </CustomButton>\n    </div>\n)\n\nconst mapStateToProps = createStructuredSelector({\n    cartItems: selectCartItems\n})\n\n//wrap in withWrouter so we have access to history in props\nexport default withRouter(connect(mapStateToProps)(CartDropdown));"]},"metadata":{},"sourceType":"module"}