{"ast":null,"code":"export const addItemToCart = (prevCart, toAdd) => {\n  const matchingCartItem = prevCart.find(cartItem => cartItem.id === toAdd.id);\n\n  if (matchingCartItem) {\n    return prevCart.map(cartItem => cartItem.id === toAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  } //else, no matching item, this is a new item for the cart. set quantity.\n\n\n  return [...prevCart, { ...toAdd,\n    quantity: 1\n  }];\n}; //if matching and quantity of 1, remove it.\n//if quantity greater than 1, decrease quantity.\n//if not matching, return previous cart\n\nexport const removeItemFromCart = (prevCart, toRemove) => {\n  const matchingCartItem = prevCart.find(cartItem => cartItem.id === toRemove.id);\n\n  if (matchingCartItem) {\n    if (matchingCartItem.quantity === 1) return prevCart.filter(cartItem => cartItem.id !== toRemove.id);\n    return prevCart.map(cartItem => cartItem.id === toRemove.id ? { ...cartItem,\n      quantity: cartItem.quantity - 1\n    } : cartItem);\n  }\n\n  console.warn('trying to remove from an item that was not in cart');\n  return prevCart;\n};","map":{"version":3,"sources":["/Users/samp/projects/jobSearch/udemy/complete-react/crwn-clothing/src/redux/cart/cart.utils.js"],"names":["addItemToCart","prevCart","toAdd","matchingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","toRemove","filter","console","warn"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC9C,QAAMC,gBAAgB,GAAGF,QAAQ,CAACG,IAAT,CACrBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,KAAK,CAACI,EADb,CAAzB;;AAIA,MAAGH,gBAAH,EAAqB;AACjB,WAAOF,QAAQ,CAACM,GAAT,CAAaF,QAAQ,IACxBA,QAAQ,CAACC,EAAT,KAAgBJ,KAAK,CAACI,EAAtB,GAA2B,EACvB,GAAGD,QADoB;AAEvBG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAFP,KAA3B,GAIGH,QALA,CAAP;AAMH,GAZ6C,CAc9C;;;AACA,SAAO,CAAC,GAAGJ,QAAJ,EAAc,EAAC,GAAGC,KAAJ;AAAWM,IAAAA,QAAQ,EAAE;AAArB,GAAd,CAAP;AACH,CAhBM,C,CAkBP;AACA;AACA;;AACA,OAAO,MAAMC,kBAAkB,GAAG,CAACR,QAAD,EAAWS,QAAX,KAAwB;AACtD,QAAMP,gBAAgB,GAAGF,QAAQ,CAACG,IAAT,CACrBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,QAAQ,CAACJ,EADhB,CAAzB;;AAIA,MAAGH,gBAAH,EAAqB;AACjB,QAAGA,gBAAgB,CAACK,QAAjB,KAA8B,CAAjC,EACI,OAAOP,QAAQ,CAACU,MAAT,CACHN,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,QAAQ,CAACJ,EADlC,CAAP;AAIJ,WAAOL,QAAQ,CAACM,GAAT,CAAaF,QAAQ,IACvBA,QAAQ,CAACC,EAAT,KAAgBI,QAAQ,CAACJ,EAAzB,GAA8B,EACvB,GAAGD,QADoB;AAEvBG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAFP,KAA9B,GAICH,QALC,CAAP;AAMH;;AAEDO,EAAAA,OAAO,CAACC,IAAR,CAAa,oDAAb;AACA,SAAOZ,QAAP;AACH,CArBM","sourcesContent":["export const addItemToCart = (prevCart, toAdd) => {\n    const matchingCartItem = prevCart.find(\n        cartItem => cartItem.id === toAdd.id\n    );\n\n    if(matchingCartItem) {\n        return prevCart.map(cartItem => \n            cartItem.id === toAdd.id ? { \n                ...cartItem,\n                quantity: cartItem.quantity + 1\n             }\n             : cartItem )\n    }\n\n    //else, no matching item, this is a new item for the cart. set quantity.\n    return [...prevCart, {...toAdd, quantity: 1}]\n};\n\n//if matching and quantity of 1, remove it.\n//if quantity greater than 1, decrease quantity.\n//if not matching, return previous cart\nexport const removeItemFromCart = (prevCart, toRemove) => {\n    const matchingCartItem = prevCart.find(\n        cartItem => cartItem.id === toRemove.id\n    );\n\n    if(matchingCartItem) {\n        if(matchingCartItem.quantity === 1) \n            return prevCart.filter(\n                cartItem => cartItem.id !== toRemove.id)\n        \n\n        return prevCart.map(cartItem => \n             cartItem.id === toRemove.id ? {\n                    ...cartItem,\n                    quantity: cartItem.quantity - 1\n                }\n            : cartItem )\n    }\n\n    console.warn('trying to remove from an item that was not in cart');\n    return prevCart;\n};"]},"metadata":{},"sourceType":"module"}