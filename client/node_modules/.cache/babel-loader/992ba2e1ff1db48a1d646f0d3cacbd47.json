{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { SignInSuccess, SignInFailure } from './user.actions';\n\nfunction* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n\nfunction* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n\nfunction* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n} //listen for GOOGLE_SIGNIN_START and trigger actual action in reducer\n\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGNIN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/samp/projects/jobSearch/udemy/complete-react/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","SignInSuccess","SignInFailure","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGNIN_START","onEmailSignInStart","EMAIL_SIGNIN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,gBAA7C;;AAEA,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AAC1C,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMT,IAAI,CAACI,yBAAD,EAA4BI,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AAEA,UAAMb,GAAG,CACPO,aAAa,CAAC;AAAEO,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADN,CAAT;AAGD,GAPD,CAQA,OAAQC,KAAR,EAAgB;AACd,UAAMhB,GAAG,CAACQ,aAAa,CAAEQ,KAAF,CAAd,CAAT;AACD;AACF;;AAED,UAAUC,gBAAV,GAA6B;AAC3B,MAAG;AACD,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMd,IAAI,CAACe,eAAL,CAAqBd,cAArB,CAAvB;AACA,UAAMI,uBAAuB,CAAES,IAAF,CAA7B;AACD,GAHD,CAIA,OAAQF,KAAR,EAAgB;AACd,UAAMhB,GAAG,CAACQ,aAAa,CAAEQ,KAAF,CAAd,CAAT;AACD;AACF;;AAED,UAAUI,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA2D;AACxD,MAAI;AACD,UAAM;AAAEL,MAAAA;AAAF,QAAW,MAAMd,IAAI,CAACoB,0BAAL,CAAiCF,KAAjC,EAAwCC,QAAxC,CAAvB;AACA,UAAMd,uBAAuB,CAAES,IAAF,CAA7B;AACD,GAHF,CAIC,OAAQF,KAAR,EAAgB;AACd,UAAMhB,GAAG,CAAEQ,aAAa,CAAGQ,KAAH,CAAf,CAAT;AACD;AACJ,C,CAED;;;AACA,OAAO,UAAUS,mBAAV,GAAgC;AACrC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,mBAAjB,EAAsCT,gBAAtC,CAAhB;AACD;AAED,OAAO,UAAUU,kBAAV,GAA+B;AACpC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,kBAAjB,EAAqCR,eAArC,CAAhB;AACD;AAED,OAAO,UAAUS,SAAV,GAAsB;AAC3B,QAAM5B,GAAG,CAAC,CACRC,IAAI,CAACuB,mBAAD,CADI,EAERvB,IAAI,CAACyB,kBAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\n\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { SignInSuccess, SignInFailure } from './user.actions';\n\nfunction* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n\n    yield put(\n      SignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    );\n  }\n  catch ( error ) {\n    yield put(SignInFailure( error ));\n  }\n}\n\nfunction* signInWithGoogle() {\n  try{\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth( user )\n  }\n  catch ( error ) {\n    yield put(SignInFailure( error ));\n  }\n}\n\nfunction* signInWithEmail({ payload: { email, password }}) {\n   try {\n      const { user } = yield auth.signInWithEmailAndPassword( email, password );\n      yield getSnapshotFromUserAuth( user )\n    } \n    catch ( error ) {\n      yield put( SignInFailure ( error ));\n    }\n}\n\n//listen for GOOGLE_SIGNIN_START and trigger actual action in reducer\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGNIN_START, signInWithEmail );\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n  ])\n}"]},"metadata":{},"sourceType":"module"}