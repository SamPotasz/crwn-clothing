{"ast":null,"code":"var _jsxFileName = \"/Users/samp/projects/jobSearch/udemy/complete-react/crwn-clothing/src/App.js\";\nimport React, { useEffect } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport './App.css';\nimport Header from './components/header/header.component';\nimport HomePage from './pages/hompepage/hompage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInAndSignUp from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport { CheckUserSession } from './redux/user/user.actions';\n\nconst App = ({\n  currentUser\n}) => {\n  // let unsubscribeFromAuth = null;\n  useEffect(() => {\n    //when onAuthStateChanged is called, it returns its closing method. save that, call on unMount\n    const unsubscribe = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        //save to firebase\n        const userRef = await createUserProfileDocument(userAuth); //add listener for data changes\n\n        userRef.onSnapshot(snapshot => {\n          setCurrentUser({\n            id: snapshot.id,\n            ...snapshot.data()\n          });\n        });\n      }\n\n      setCurrentUser(userAuth); // addCollectionAndDocuments('collections', \n      //   collectionsArray.map(({title, items}) => ({title, items})))\n\n      return () => {\n        unsubscribe();\n      };\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: HomePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/shop\",\n    component: ShopPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/checkout\",\n    component: CheckoutPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/signin\",\n    render: () => currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 28\n      }\n    }) : /*#__PURE__*/React.createElement(SignInAndSignUp, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 52\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(CheckUserSession)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/samp/projects/jobSearch/udemy/complete-react/crwn-clothing/src/App.js"],"names":["React","useEffect","Route","Switch","Redirect","connect","createStructuredSelector","Header","HomePage","ShopPage","SignInAndSignUp","CheckoutPage","selectCurrentUser","CheckUserSession","App","currentUser","unsubscribe","auth","onAuthStateChanged","userAuth","userRef","createUserProfileDocument","onSnapshot","snapshot","setCurrentUser","id","data","mapStateToProps","mapDispatchToProps","dispatch","checkUserSession"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,KAAR,EAAeC,MAAf,EAAuBC,QAAvB,QAAuC,kBAAvC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAO,WAAP;AAEA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,eAAP,MAA4B,2DAA5B;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AAEA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,SAASC,gBAAT,QAAiC,2BAAjC;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AAE/B;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMe,WAAW,GAAGC,IAAI,CAACC,kBAAL,CAAyB,MAAMC,QAAN,IAAkB;AAC7D,UAAGA,QAAH,EAAa;AACX;AACA,cAAMC,OAAO,GAAG,MAAMC,yBAAyB,CAACF,QAAD,CAA/C,CAFW,CAIX;;AACAC,QAAAA,OAAO,CAACE,UAAR,CAAmBC,QAAQ,IAAI;AAC7BC,UAAAA,cAAc,CAAC;AACbC,YAAAA,EAAE,EAAEF,QAAQ,CAACE,EADA;AAEb,eAAGF,QAAQ,CAACG,IAAT;AAFU,WAAD,CAAd;AAID,SALD;AAMD;;AAEDF,MAAAA,cAAc,CAACL,QAAD,CAAd,CAd6D,CAgB7D;AACA;;AAEA,aAAO,MAAM;AACXH,QAAAA,WAAW;AACZ,OAFD;AAGC,KAtBiB,CAApB;AAuBD,GAzBQ,EAyBN,EAzBM,CAAT;AA2BE,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAER,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,WAAlB;AAA8B,IAAA,SAAS,EAAEE,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,SAAlB;AAA4B,IAAA,MAAM,EAAE,MAClCI,WAAW,gBAAI,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,gBAA4B,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAFF,CADF;AAaH,CA5CD;;AA8CA,MAAMY,eAAe,GAAGrB,wBAAwB,CAAC;AAC/CS,EAAAA,WAAW,EAAEH;AADkC,CAAD,CAAhD;;AAIA,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCC,EAAAA,gBAAgB,EAAE,MAAMD,QAAQ,CAAChB,gBAAD;AADM,CAAL,CAAnC;;AAIA,eAAeR,OAAO,CAACsB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6Cd,GAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport {Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport './App.css';\n\nimport Header from './components/header/header.component';\nimport HomePage from './pages/hompepage/hompage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInAndSignUp from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\n\nimport { selectCurrentUser } from './redux/user/user.selectors'\nimport { CheckUserSession } from './redux/user/user.actions';\n\nconst App = ({ currentUser }) => {\n    \n  // let unsubscribeFromAuth = null;\n\n  useEffect(() => {\n    //when onAuthStateChanged is called, it returns its closing method. save that, call on unMount\n    const unsubscribe = auth.onAuthStateChanged( async userAuth => {\n      if(userAuth) {\n        //save to firebase\n        const userRef = await createUserProfileDocument(userAuth);\n\n        //add listener for data changes\n        userRef.onSnapshot(snapshot => {\n          setCurrentUser({\n            id: snapshot.id,\n            ...snapshot.data()\n          })\n        });\n      }\n\n      setCurrentUser(userAuth);\n      \n      // addCollectionAndDocuments('collections', \n      //   collectionsArray.map(({title, items}) => ({title, items})))\n    \n      return () => {\n        unsubscribe();\n      }\n      })\n  }, [])\n\n    return (\n      <div>\n        <Header />\n        <Switch>\n          <Route exact path='/' component={HomePage}/>\n          <Route path='/shop' component={ShopPage}/>\n          <Route exact path='/checkout' component={CheckoutPage}/>\n          <Route exact path='/signin' render={() => \n            currentUser ? (<Redirect to='/' />) : (<SignInAndSignUp />)} />\n        </Switch>\n      </div>\n    );\n    \n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(CheckUserSession)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}