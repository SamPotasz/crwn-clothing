{"ast":null,"code":"var _jsxFileName = \"/Users/samp/projects/jobSearch/udemy/complete-react/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage); //match, location, history all passed in with routes\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  //load data from firestore\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, {\n        isLoading: loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 40\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/samp/projects/jobSearch/udemy/complete-react/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","updateCollections","firestore","convertCollectionsSnapshotToMap","WithSpinner","CollectionsOverview","CollectionPage","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACC,mBAAD,CAAlD;AACA,MAAMG,yBAAyB,GAAGJ,WAAW,CAACE,cAAD,CAA7C,C,CAEA;;AACA,MAAMG,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CACA;AAAA;AAAA;AAAA,SACIC,KADJ,GACY;AACJC,MAAAA,OAAO,EAAE;AADL,KADZ;AAAA,SAMIC,uBANJ,GAM8B,IAN9B;AAAA;;AAQI;AACAC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEb,MAAAA;AAAF,QAAwB,KAAKc,KAAnC;AAEA,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAA0B,MAAMC,QAAN,IAAkB;AACxC,YAAMC,cAAc,GAAGjB,+BAA+B,CAACgB,QAAD,CAAtD;AACAlB,MAAAA,iBAAiB,CAACmB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAJD;AAKH;;AAEDU,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EAAjC;AACI,MAAA,MAAM,EAAGT,KAAD,iBAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAGI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEW,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAElB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AASH;;AAhCL;;AAmCA,MAAMmB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCzB,EAAAA,iBAAiB,EAAEmB,cAAc,IAAIM,QAAQ,CAACzB,iBAAiB,CAACmB,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAIA,eAAepB,OAAO,CAAC,IAAD,EAAOyB,kBAAP,CAAP,CAAkChB,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\n//match, location, history all passed in with routes\nclass ShopPage extends React.Component \n{\n    state = {\n        loading: true\n    };\n\n    //snapshot representation of collections array returned from firestore\n    unsubscribeFromSnapshot = null;\n\n    //load data from firestore\n    componentDidMount() {\n        const { updateCollections } = this.props;\n\n        const collectionRef = firestore.collection('collections');\n        collectionRef.onSnapshot( async snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            updateCollections(collectionsMap);\n            this.setState({ loading: false });\n        });\n    }\n\n    render() {\n        const { match } = this.props;\n        const { loading } = this.state;\n        return (\n            <div className='shop-page'>\n                <Route exact path={`${match.path}`} \n                    render={(props) => <CollectionsOverviewWithSpinner isLoading={loading} /> } />\n                <Route path={`${match.path}/:collectionId`} component={CollectionPage}/>\n                {/* <Route exact path={`${match.path}`} component={CollectionsOverview} /> */}\n                {/* <Route path={`${match.path}/:collectionId`} component={CollectionPage}/> */}\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}