{"ast":null,"code":"/**\n * hold all the sagas for our shop\n */\nimport SHOP_ACTION_TYPES from './shop.types'; //takeEvery listens for every action of a given type\n\nimport { takeEvery } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n/**\n * Generator function that's executed by takeEvery\n */\n\nexport function* fetchCollectionsAsync() {\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsError(error.message)));\n}\n/**\n * Pause when a specific action type comes in.\n */\n\nexport function* fetchCollectionStartSaga() {\n  yield takeEvery(SHOP_ACTION_TYPES.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/samp/projects/jobSearch/udemy/complete-react/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["SHOP_ACTION_TYPES","takeEvery","firestore","convertCollectionsSnapshotToMap","fetchCollectionsAsync","collectionRef","collection","get","then","snapshot","collectionsMap","dispatch","fetchCollectionsSuccess","catch","error","fetchCollectionsError","message","fetchCollectionStartSaga","FETCH_COLLECTIONS_START"],"mappings":"AAAA;;;AAIC,OAAOA,iBAAP,MAA8B,cAA9B,C,CAEA;;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA;;;;AAGD,OAAO,UAAUC,qBAAV,GAAkC;AAErC,QAAMC,aAAa,GAAGH,SAAS,CAACI,UAAV,CAAqB,aAArB,CAAtB;AAEAD,EAAAA,aAAa,CACRE,GADL,GAEKC,IAFL,CAEUC,QAAQ,IAAI;AACd,UAAMC,cAAc,GAAGP,+BAA+B,CAACM,QAAD,CAAtD;AACAE,IAAAA,QAAQ,CAACC,uBAAuB,CAACF,cAAD,CAAxB,CAAR;AACP,GALD,EAMCG,KAND,CAMOC,KAAK,IAAIH,QAAQ,CAACI,qBAAqB,CAACD,KAAK,CAACE,OAAP,CAAtB,CANxB;AAOH;AAEA;;;;AAGA,OAAO,UAAUC,wBAAV,GAAqC;AACzC,QAAMhB,SAAS,CACXD,iBAAiB,CAACkB,uBADP,EAEXd,qBAFW,CAAf;AAGF","sourcesContent":["/**\n * hold all the sagas for our shop\n */\n\n import SHOP_ACTION_TYPES from './shop.types'\n\n //takeEvery listens for every action of a given type\n import { takeEvery } from 'redux-saga/effects'\n\n import { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\n /**\n  * Generator function that's executed by takeEvery\n  */\nexport function* fetchCollectionsAsync() {\n    \n    const collectionRef = firestore.collection('collections');\n\n    collectionRef\n        .get()\n        .then(snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            dispatch(fetchCollectionsSuccess(collectionsMap));\n    })\n    .catch(error => dispatch(fetchCollectionsError(error.message)));\n}\n\n /**\n  * Pause when a specific action type comes in.\n  */\n export function* fetchCollectionStartSaga() {\n    yield takeEvery(\n        SHOP_ACTION_TYPES.FETCH_COLLECTIONS_START, \n        fetchCollectionsAsync)\n }"]},"metadata":{},"sourceType":"module"}