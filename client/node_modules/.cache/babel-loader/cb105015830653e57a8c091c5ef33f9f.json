{"ast":null,"code":"var _jsxFileName = \"/Users/samp/projects/jobSearch/udemy/complete-react/crwn-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { SignUpStart } from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\n\nconst SignUp = props => {\n  const {\n    dispatchStartSignup\n  } = props;\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Your passwords must match!\");\n      return;\n    }\n\n    dispatchStartSignup();\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"displayName\",\n    type: \"text\",\n    label: \"Name\",\n    value: displayName,\n    handleChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    label: \"Email\",\n    value: email,\n    handleChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    label: \"Password\",\n    handleChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"confirmPassword\",\n    type: \"password\",\n    value: confirmPassword,\n    label: \"Confirm Password\",\n    handleChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    value: \"Submit Form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Sign Up\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchStartSignup: () => dispatch(SignUpStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/samp/projects/jobSearch/udemy/complete-react/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","auth","createUserProfileDocument","SignUpStart","SignUp","props","dispatchStartSignup","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","value","name","target","mapDispatchToProps","dispatch","connect"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { SignUpStart } from '../../redux/user/user.actions';\n\nimport './sign-up.styles.scss';\n\nconst SignUp = props => {\n\n  const { dispatchStartSignup } = props;\n\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  });\n    \n  const { displayName, email, password, confirmPassword } = userCredentials;\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if(password !== confirmPassword) {\n      alert(\"Your passwords must match!\");\n      return;\n    }\n\n    dispatchStartSignup();\n  }\n\n    const handleChange = (event) => {\n        const { value, name } = event.target;\n\n        setUserCredentials({...userCredentials, [name]: value })\n    }\n\n    return(\n        <div className=\"sign-up\">\n            <h2 className=\"title\">I do not have an account</h2>\n            <span>Sign up with your email and password</span>\n            \n            <form onSubmit={handleSubmit}>\n                \n                <FormInput \n                    name=\"displayName\" \n                    type=\"text\" \n                    label='Name'\n                    value={displayName} \n                    handleChange={handleChange}\n                    required/>\n\n                <FormInput \n                    name=\"email\" \n                    type=\"email\" \n                    label='Email'\n                    value={email} \n                    handleChange={handleChange}\n                    required/>\n\n                <FormInput \n                    name=\"password\" \n                    type=\"password\" \n                    value={password}\n                    label='Password'\n                    handleChange={handleChange}\n                    required/>\n\n                <FormInput \n                    name=\"confirmPassword\" \n                    type=\"password\" \n                    value={confirmPassword}\n                    label='Confirm Password'\n                    handleChange={handleChange}\n                    required/>\n\n                <div className=\"buttons\">\n                    <CustomButton type=\"submit\" value='Submit Form'>Sign Up</CustomButton>\n                </div>\n                \n            </form>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchStartSignup: () => dispatch(SignUpStart())\n})\n\nexport default connect( null, mapDispatchToProps )(SignUp);"]},"metadata":{},"sourceType":"module"}