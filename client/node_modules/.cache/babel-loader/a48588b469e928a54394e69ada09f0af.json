{"ast":null,"code":"import { createSelector } from 'reselect'; //input selector. function takes the whole state and returns 1-layer deep\n\nconst selectCart = state => state.cart; //\n\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems ? cartItems.reduce((prevQuantity, cartItem) => prevQuantity + cartItem.quantity, 0) : []);\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((prevTotal, cartItem) => prevTotal + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["/Users/samp/projects/jobSearch/udemy/complete-react/crwn-clothing/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","prevQuantity","cartItem","quantity","selectCartTotal","prevTotal","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B,C,CAEA;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC,C,CAEA;;;AACA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CACzC,CAACC,UAAD,CADyC,EAExCE,IAAI,IAAIA,IAAI,CAACE,SAF2B,CAAtC;AAKP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAEzCE,IAAI,IAAIA,IAAI,CAACI,MAF4B,CAAvC;AAKP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAC9C,CAACI,eAAD,CAD8C,EAE9CC,SAAS,IAAIA,SAAS,GAAGA,SAAS,CAACI,MAAV,CACrB,CAACC,YAAD,EAAeC,QAAf,KAA4BD,YAAY,GAAGC,QAAQ,CAACC,QAD/B,EAErB,CAFqB,CAAH,GAEZ,EAJoC,CAA3C;AAOP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CACzC,CAACI,eAAD,CADyC,EAEzCC,SAAS,IAAIA,SAAS,CAACI,MAAV,CACT,CAACK,SAAD,EAAYH,QAAZ,KAAyBG,SAAS,GAAGH,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACI,KADzD,EAET,CAFS,CAF4B,CAAtC","sourcesContent":["import { createSelector } from 'reselect';\n\n//input selector. function takes the whole state and returns 1-layer deep\nconst selectCart = state => state.cart;\n\n//\nexport const selectCartItems = createSelector(\n    [selectCart],\n    (cart => cart.cartItems)\n)\n\nexport const selectCartHidden = createSelector(\n    [selectCart],\n    (cart => cart.hidden)\n)\n\nexport const selectCartItemsCount = createSelector(\n    [selectCartItems],\n    cartItems => cartItems ? cartItems.reduce( \n        (prevQuantity, cartItem) => prevQuantity + cartItem.quantity,\n        0 ) : []\n)\n\nexport const selectCartTotal = createSelector(\n    [selectCartItems],\n    cartItems => cartItems.reduce( \n        (prevTotal, cartItem) => prevTotal + cartItem.quantity * cartItem.price,\n        0 )\n)\n"]},"metadata":{},"sourceType":"module"}