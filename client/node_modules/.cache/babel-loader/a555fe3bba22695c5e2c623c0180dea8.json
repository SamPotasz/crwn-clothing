{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist'; //allows browser to cache the store\n\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport { fetchCollectionStartSaga } from '../redux/shop/shop.saga';\nimport rootReducer from './root-reducer'; //see docs for optional config\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n} //instantiate the redux store!\n\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(fetchCollectionStartSaga);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/Users/samp/projects/jobSearch/udemy/complete-react/crwn-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","fetchCollectionStartSaga","rootReducer","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B,C,CAA+C;;AAC/C,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,SAASC,wBAAT,QAAyC,yBAAzC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB,C,CAEA;;AACA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA,MAAMI,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACH,C,CAED;;;AACA,OAAO,MAAMU,KAAK,GAAGb,WAAW,CAACM,WAAD,EAAcL,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAmBT,wBAAnB;AAEA,OAAO,MAAMU,SAAS,GAAGb,YAAY,CAACW,KAAD,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAF;AAASE,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';  //allows browser to cache the store\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { fetchCollectionStartSaga } from '../redux/shop/shop.saga';\n\nimport rootReducer from './root-reducer';\n\n//see docs for optional config\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n    middlewares.push(logger);\n}\n\n//instantiate the redux store!\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nsagaMiddleware.run(fetchCollectionStartSaga);\n\nexport const persistor = persistStore(store);\n\nexport default { store, persistor };\n"]},"metadata":{},"sourceType":"module"}